### CSE341 Project 2 - OAuth Enhanced API Testing for Video Demo
### Base URL - Update this to your deployed URL
@baseUrl = https://cse341-project-2-7bfl.onrender.com
@localUrl = http://localhost:8081

# Variables to store tokens and IDs
@oauthToken = 
@userId = 
@workoutId = 

###############################################
# 1. OAUTH AUTHENTICATION (Primary Demo)
###############################################

### 1a. GitHub OAuth Login - USE BROWSER, NOT REST CLIENT
# Open this URL in browser: https://cse341-project-2-7bfl.onrender.com
# Copy the token from JSON response and paste in @oauthToken variable above

### 1b. Get Current User Profile (OAuth Token)
GET {{baseUrl}}/users/profile/me
Authorization: Bearer {{oauthToken}}
# Copy user ID from response and paste in @userId above

### 1c. Get All Users with OAuth Token
GET {{baseUrl}}/users
Authorization: Bearer {{oauthToken}}

###############################################
# 2. AUTHENTICATION DEMOS (Show Protected Routes)
###############################################

### 2a. Protected Route WITHOUT Token (401 Error)
GET {{baseUrl}}/users

### 2b. Protected Route WITH OAuth Token (Success)
GET {{baseUrl}}/users
Authorization: Bearer {{oauthToken}}

###############################################
# 3. DATA VALIDATION ERRORS (400/500 Status)
###############################################

### 3a. User Update Validation Error - Invalid Data
PUT {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{oauthToken}}
Content-Type: application/json

{
    "email": "invalid-email-format",
    "weight": "not-a-number",
    "height": -50
}

###############################################
# 4. WORKOUTS CRUD (Second Collection Demo)
###############################################

### 4a. Create Workout (Use OAuth Token)
POST {{baseUrl}}/workouts
Authorization: Bearer {{oauthToken}}
Content-Type: application/json

{
    "userId": "{{userId}}",
    "workoutName": "OAuth User Morning Run",
    "date": "2025-06-14",
    "duration": 45,
    "caloriesBurned": 300,
    "exerciseType": "Cardio",
    "notes": "Created via OAuth authentication"
}
### Copy workout ID from response and paste in @workoutId above

### 4b. Workout Validation Error - Missing Required Fields
POST {{baseUrl}}/workouts
Authorization: Bearer {{oauthToken}}
Content-Type: application/json

{
    "workoutName": "Invalid Workout"
}

### 4c. Get All Workouts (Show Pagination)
GET {{baseUrl}}/workouts?page=1&limit=5
Authorization: Bearer {{oauthToken}}

### 4d. Get Single Workout
GET {{baseUrl}}/workouts/{{workoutId}}
Authorization: Bearer {{oauthToken}}

### 4e. Update Workout (PUT Demo)
PUT {{baseUrl}}/workouts/{{workoutId}}
Authorization: Bearer {{oauthToken}}
Content-Type: application/json

{
    "duration": 50,
    "caloriesBurned": 350,
    "notes": "Updated via OAuth - even better workout!"
}

###############################################
# 5. ERROR HANDLING DEMOS (Various Status Codes)
###############################################

### 5a. Invalid ID Format (400 Error)
GET {{baseUrl}}/workouts/invalid-id-format
Authorization: Bearer {{oauthToken}}

### 5b. Non-existent Resource (404 Error)
GET {{baseUrl}}/workouts/507f1f77bcf86cd799439011
Authorization: Bearer {{oauthToken}}

### 5c. Access Denied - No Authentication (401)
GET {{baseUrl}}/workouts/{{workoutId}}

###############################################
# 6. UPDATE OPERATIONS (PUT Validation)
###############################################

### 6a. Update User (Valid Data)
PUT {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{oauthToken}}
Content-Type: application/json

{
    "firstName": "Updated via OAuth",
    "weight": 78
}

### 6b. Update User Validation Error (400)
PUT {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{oauthToken}}
Content-Type: application/json

{
    "email": "invalid-email-format",
    "dateOfBirth": "not-a-date"
}

###############################################
# 7. DELETE OPERATIONS (Complete CRUD)
###############################################

### 7a. Delete Workout
DELETE {{baseUrl}}/workouts/{{workoutId}}
Authorization: Bearer {{oauthToken}}

### 7b. Verify Deletion (404 Expected)
GET {{baseUrl}}/workouts/{{workoutId}}
Authorization: Bearer {{oauthToken}}

###############################################
# STREAMLINED OAUTH VIDEO SEQUENCE (8 minutes max)
###############################################

# üé• VIDEO SEQUENCE:
# 1. Show OAuth login (1a) - GitHub redirect & authentication ‚≠ê MAIN FEATURE
# 2. Get OAuth token from callback JSON response
# 3. Get user profile (1b) - Copy userId for later use ‚≠ê
# 4. Show protected route without auth (2a) - 401 error
# 5. Show protected route with OAuth token (2b) - Authentication working ‚≠ê
# 6. Show validation error (3a) - 400 status for users
# 7. Create workout with OAuth token (4a) - Second collection ‚≠ê
# 8. Show workout validation error (4b) - Data validation
# 9. Get workouts (4c) - GET operation with pagination
# 10. Update workout (4e) - PUT operation  
# 11. Show MongoDB Compass - Both collections with 7+ fields ‚≠ê
# 12. Delete workout (7a) - DELETE operation
# 13. Show Swagger documentation at /api-docs ‚≠ê

###############################################
# STATUS CODES TO DEMONSTRATE:
###############################################
# ‚úÖ 200 - Successful GET requests
# ‚úÖ 201 - Successful POST (workout creation)
# ‚úÖ 400 - Validation errors (bad data)
# ‚úÖ 401 - Authentication required
# ‚úÖ 404 - Resource not found
# ‚úÖ 500 - Server errors (try/catch)
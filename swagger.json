{
  "swagger": "2.0",
  "info": {
    "title": "CSE 341 Project 2 - Fitness Tracker API",
    "description": "REST API for tracking workouts and managing users",
    "version": "1.0.0"
  },
  "host": "http//:localhost:8081",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/auth/github": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Initiate GitHub OAuth login",
        "description": "Redirects user to GitHub for OAuth authentication",
        "responses": {
          "302": {
            "description": "Redirect to GitHub OAuth"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "GitHub OAuth callback",
        "description": "Handles GitHub OAuth callback and returns JWT token",
        "responses": {
          "200": {
            "description": "OAuth login successful"
          },
          "401": {
            "description": "OAuth authentication failed"
          }
        }
      }
    },
    "/workouts/": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Get all workouts",
        "description": "Retrieve workouts with pagination and filtering. Users see only their own workouts unless admin.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "exerciseType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workouts retrieved successfully with pagination info"
          },
          "400": {
            "description": "Validation failed - Invalid pagination or date parameters"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to fetch workouts"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Workouts"
        ],
        "summary": "Create new workout",
        "description": "Create a new workout record. Users can only create workouts for themselves unless admin.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Workout created successfully"
          },
          "400": {
            "description": "Validation failed / Target user does not exist"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only create workouts for yourself"
          },
          "500": {
            "description": "Failed to create workout"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/workouts/{id}": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Get workout by ID",
        "description": "Retrieve a specific workout by ID. Users can only view their own workouts unless admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workout retrieved successfully"
          },
          "400": {
            "description": "Invalid workout ID format"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only view own workouts"
          },
          "404": {
            "description": "Workout not found"
          },
          "500": {
            "description": "Failed to fetch workout"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Workouts"
        ],
        "summary": "Update workout",
        "description": "Update workout information. Users can only update their own workouts unless admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workout updated successfully"
          },
          "400": {
            "description": "Invalid workout ID format / Validation failed / Target user does not exist"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only update own workouts / Only admins can reassign workouts"
          },
          "404": {
            "description": "Workout not found"
          },
          "500": {
            "description": "Failed to update workout"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Workouts"
        ],
        "summary": "Delete workout",
        "description": "Delete a workout record. Users can only delete their own workouts unless admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workout deleted successfully"
          },
          "400": {
            "description": "Invalid workout ID format"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only delete own workouts"
          },
          "404": {
            "description": "Workout not found"
          },
          "500": {
            "description": "Failed to delete workout"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/workouts/stats/me": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Get current user workout statistics",
        "description": "Retrieve workout statistics for the authenticated user including totals, averages, and recent activity",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Workout statistics retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to fetch workout statistics"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/workouts/stats/{userId}": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Get user workout statistics",
        "description": "Retrieve workout statistics for any user by ID. Admin privileges required.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User workout statistics retrieved successfully"
          },
          "400": {
            "description": "Invalid userId format"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Admin privileges required"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to fetch user workout statistics"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Retrieve a list of all users with publicly safe fields only. Requires authentication.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Failed to fetch users"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Register a new user account with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "passwordConfirm": {
                  "example": "any"
                },
                "dateOfBirth": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "height": {
                  "example": "any"
                },
                "weight": {
                  "example": "any"
                },
                "isTestUser": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation failed"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Failed to create user"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by ID. Users can only view their own profile unless they are admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only view own profile"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to fetch user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update user information. Users can only update their own profile unless they are admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "dateOfBirth": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "height": {
                  "example": "any"
                },
                "weight": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Validation failed"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only update own profile"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Failed to update user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete a user account. Users can only delete their own account unless they are admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Can only delete own account"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to delete user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticate user with email and password, returns JWT token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Validation failed"
          },
          "401": {
            "description": "Invalid email or password / Account deactivated"
          },
          "500": {
            "description": "Failed to login / Server configuration error"
          }
        }
      }
    },
    "/users/{id}/role": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user role",
        "description": "Update a user\\'s role. Admin privileges required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User role updated successfully"
          },
          "400": {
            "description": "Invalid role / Cannot change own admin role"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Access denied - Admin privileges required"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to update user role"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user profile",
        "description": "Retrieve the authenticated user\\'s own profile information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to fetch user profile"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}